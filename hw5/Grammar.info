-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.7 from Grammar3.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_balparens -> Q                              (0)
	Q ->                                               (1)
	Q -> S                                             (2)
	S -> S P                                           (3)
	S -> P                                             (4)
	P -> '(' Q ')'                                     (5)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { '(' }
	')'            { ')' }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_balparens rule  0
	Q               rules 1, 2
	S               rules 3, 4
	P               rule  5

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'('            shift, and enter state 5
	%eof           reduce using rule 1

	Q              goto state 2
	S              goto state 3
	P              goto state 4

State 1




State 2

	%start_balparens -> Q .                             (rule 0)

	%eof           accept


State 3

	Q -> S .                                            (rule 2)
	S -> S . P                                          (rule 3)

	'('            shift, and enter state 5
	')'            reduce using rule 2
	%eof           reduce using rule 2

	P              goto state 7

State 4

	S -> P .                                            (rule 4)

	'('            reduce using rule 4
	')'            reduce using rule 4
	%eof           reduce using rule 4


State 5

	P -> '(' . Q ')'                                    (rule 5)

	'('            shift, and enter state 5
	')'            reduce using rule 1

	Q              goto state 6
	S              goto state 3
	P              goto state 4

State 6

	P -> '(' Q . ')'                                    (rule 5)

	')'            shift, and enter state 8


State 7

	S -> S P .                                          (rule 3)

	'('            reduce using rule 3
	')'            reduce using rule 3
	%eof           reduce using rule 3


State 8

	P -> '(' Q ')' .                                    (rule 5)

	'('            reduce using rule 5
	')'            reduce using rule 5
	%eof           reduce using rule 5


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 6
Number of terminals: 2
Number of non-terminals: 4
Number of states: 9
